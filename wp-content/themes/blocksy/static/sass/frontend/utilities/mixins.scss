// Site max-width
@mixin container-width( $args: () ) {

	$args: map-merge( (
		width: fixed,
	), $args );

	$width: map-get( $args, width );

	@if $width == fixed {
		margin-left: auto;
		margin-right: auto;
		max-width: var(--maxSiteWidth);

		@include media-breakpoint-down (sm) {
			width: 88%;
		}

		@include media-breakpoint-only (md) {
			width: 85%;
		}

		@include media-breakpoint-up (lg) {
			width: 90%;
		}
	}

	@if $width == fluid {
		width: 100%;
		margin-left: auto;
		margin-right: auto;

		@include media-breakpoint-down (md) {
			padding-left: 20px;
			padding-right: 20px;
		}

		@include media-breakpoint-up (lg) {
			padding-left: 30px;
			padding-right: 30px;
		}
	}

	@if $width == boundless {
		width: 100%;
	}
}


// placeholder
@mixin input-placeholder {
	&.placeholder {
		@content;
	}
	&:-moz-placeholder {
		@content;
	}
	&::-moz-placeholder {
		@content;
	}
	&:-ms-input-placeholder {
		@content;
	}
	&::-webkit-input-placeholder {
		@content;
	}
}


// list normalize
@mixin list-normalize( $args: () ) {
	
	$args: map-merge( (
		margin: 0,
		padding: 0,
	), $args );

	margin: map-get( $args, margin );
	padding: map-get( $args, padding );
	list-style: none;
}


// line height crop
@mixin lhCrop($line-height) {
	&::before {
		content: '';
		display: block;
		height: 0;
		width: 0;
		margin-top: calc((1 - #{$line-height}) * 0.5em);
	}
}

// responsive table
@mixin responsive-table {
	display: block;
	overflow-x: auto;

	tbody {
		display: table;
		table-layout: initial;
		width: 100%;
	}
}